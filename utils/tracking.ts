// utils/tracking.ts

// –¢–∏–ø—ã —Å–æ–±—ã—Ç–∏–π
export type TrackingEvent = 
  | 'form_view'           // –ü—Ä–æ—Å–º–æ—Ç—Ä —Ñ–æ—Ä–º—ã
  | 'form_start'          // –ù–∞—á–∞–ª–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è
  | 'form_submit'         // –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã
  | 'lead'                // –õ–∏–¥
  | 'button_click'        // –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ
  | 'phone_click'         // –ö–ª–∏–∫ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É
  | 'whatsapp_click';     // –ö–ª–∏–∫ –ø–æ WhatsApp

interface TrackingParams {
  event: TrackingEvent;
  value?: number;
  currency?: string;
  content_name?: string;
  content_category?: string;
  [key: string]: any;
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–∏–∫—Å–µ–ª–µ–π
const isPixelLoaded = (pixelName: string): boolean => {
  if (typeof window === 'undefined') return false;
  
  switch(pixelName) {
    case 'fbq':
      return typeof window.fbq === 'function';
    case 'ym':
      return typeof window.ym === 'function';
    case 'ttq':
      return typeof window.ttq !== 'undefined';
    default:
      return false;
  }
};

// –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è
export const trackEvent = (params: TrackingParams): void => {
  const { event, value, currency = 'KZT', ...otherParams } = params;

  console.log('üéØ Tracking Event:', event, params); // DEBUG

  // Facebook Pixel
  if (isPixelLoaded('fbq')) {
    try {
      switch(event) {
        case 'form_view':
          window.fbq('track', 'ViewContent', {
            content_name: params.content_name || 'Form',
            ...otherParams
          });
          break;
        
        case 'form_start':
          window.fbq('track', 'InitiateCheckout', otherParams);
          break;
        
        case 'form_submit':
        case 'lead':
          window.fbq('track', 'Lead', {
            value: value || 0,
            currency,
            ...otherParams
          });
          break;
        
        case 'button_click':
          window.fbq('trackCustom', 'ButtonClick', otherParams);
          break;
        
        case 'phone_click':
          window.fbq('track', 'Contact', { contact_type: 'phone', ...otherParams });
          break;
        
        case 'whatsapp_click':
          window.fbq('track', 'Contact', { contact_type: 'whatsapp', ...otherParams });
          break;
      }
      console.log('‚úÖ Meta Pixel tracked:', event);
    } catch (error) {
      console.error('‚ùå Meta Pixel error:', error);
    }
  } else {
    console.warn('‚ö†Ô∏è Meta Pixel not loaded');
  }

  // Yandex Metrika
  if (isPixelLoaded('ym')) {
    try {
      const ymEvent = event.toUpperCase();
      window.ym(104202860, 'reachGoal', ymEvent, {
        value,
        currency,
        ...otherParams
      });
      console.log('‚úÖ Yandex Metrika tracked:', ymEvent);
    } catch (error) {
      console.error('‚ùå Yandex Metrika error:', error);
    }
  } else {
    console.warn('‚ö†Ô∏è Yandex Metrika not loaded');
  }

  // TikTok Pixel
  if (isPixelLoaded('ttq')) {
    try {
      switch(event) {
        case 'form_view':
          window.ttq.track('ViewContent', {
            content_name: params.content_name || 'Form',
            ...otherParams
          });
          break;
        
        case 'form_start':
          window.ttq.track('InitiateCheckout', otherParams);
          break;
        
        case 'form_submit':
        case 'lead':
          window.ttq.track('SubmitForm', {
            value: value || 0,
            currency,
            ...otherParams
          });
          break;
        
        case 'button_click':
          window.ttq.track('ClickButton', otherParams);
          break;
        
        case 'phone_click':
        case 'whatsapp_click':
          window.ttq.track('Contact', otherParams);
          break;
      }
      console.log('‚úÖ TikTok Pixel tracked:', event);
    } catch (error) {
      console.error('‚ùå TikTok Pixel error:', error);
    }
  } else {
    console.warn('‚ö†Ô∏è TikTok Pixel not loaded');
  }
};

// –°–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
export const trackFormView = (formName?: string) => {
  trackEvent({
    event: 'form_view',
    content_name: formName || 'Contact Form'
  });
};

export const trackFormStart = (formName?: string) => {
  trackEvent({
    event: 'form_start',
    content_name: formName || 'Contact Form'
  });
};

export const trackFormSubmit = (formName?: string, value?: number) => {
  trackEvent({
    event: 'form_submit',
    content_name: formName || 'Contact Form',
    value: value || 0
  });
};

export const trackLead = (value?: number, source?: string) => {
  trackEvent({
    event: 'lead',
    value: value || 0,
    source: source || 'website'
  });
};

// –¢–∏–ø–∏–∑–∞—Ü–∏—è –¥–ª—è window
declare global {
  interface Window {
    fbq: any;
    ym: any;
    ttq: any;
    fbPixelReady?: boolean;
    yaMetrikaReady?: boolean;
    ttqReady?: boolean;
  }
}